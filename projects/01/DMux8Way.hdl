// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
	Not(in=sel[0], out=nsel0);
	Not(in=sel[1], out=nsel1);
	Not(in=sel[2], out=nsel2);

	And(a=in, b=nsel0, out=aand);
	And(a=aand, b=nsel1, out=aaand);
	And(a=aaand, b=nsel2, out=a);

	And(a=in, b=sel[0], out=band);
	And(a=band, b=nsel1, out=bband);
	And(a=bband, b=nsel2, out=b);

	And(a=in, b=nsel0, out=cand);
	And(a=cand, b=sel[1], out=ccand);
	And(a=ccand, b=nsel2, out=c);

	And(a=in, b=sel[0], out=dand);
	And(a=dand, b=sel[1], out=ddand);
	And(a=ddand, b=nsel2, out=d);

	And(a=in, b=nsel0, out=eand);
	And(a=eeand, b=nsel1, out=eeand);
	And(a=eand, b=sel[2], out=e);

	And(a=in, b=sel[0], out=fand);
	And(a=fand, b=nsel1, out=ffand);
	And(a=ffand, b=sel[2], out=f);

	And(a=in, b=nsel0, out=gand);
	And(a=gand, b=sel[1], out=ggand);
	And(a=ggand, b=sel[2], out=g);

	And(a=in, b=sel[0], out=hand);
	And(a=hand, b=sel[1], out=hhand);
	And(a=hhand, b=sel[2], out=h);
}
